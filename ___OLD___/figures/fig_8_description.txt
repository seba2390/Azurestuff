N = 4,5,...,14,15, k = N//2, max_iterations = 1000, alpha=0.5, Averaged over 50 runs, Used 3 Layers every time.

Using 1D chain (with next nearest) w. following initialization strategies:

			     [0,1,0,1],

                             [0,1,0,1,0],

                             [0,1,0,1,0,1],

                             [0,1,0,1,0,1,0],

                             [0,1,0,1,0,1,0,1],

                             [0,1,0,1,0,1,0,1,0],

                             [0,1,0,1,0,1,0,1,0,1],

                             [0,1,0,1,0,1,0,1,0,1,0],

                             [0,1,0,1,0,1,0,1,0,1,0,1],

                             [0,1,0,1,0,1,0,1,0,1,0,1,0],

                             [0,1,0,1,0,1,0,1,0,1,0,1,0,1],

                             [0,1,0,1,0,1,0,1,0,1,0,1,0,1,0]

Used Next-Nearest-Neighbor interactions also.
Initial parameters sampled random uniformly in [-2*pi;2*pi]
Used COBYLA to optimize.

The normalization of the cost is done wrt. the max cost
of a 'N' choose 'K' state (the subspace).
